@page "/blzrmethods"
<div class="container-fluid ">
    @*Title of Challenge*@
    <div class="row justify-content-center">
        <div class="col">
            <h1 class="text-center">Methods & Databinding:</h1>
            <hr />
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-xs col-sm col-md-10 col-lg-8">
            <h5 class="text-center">
                Each button below will call the current date time in short format UTC, but using three popular methods used in Blazor Apps.
            </h5>
        </div>
    </div>
    <hr />

    <div class="text-center">

        <h4>On-click Method Examples</h4><br />
        <p><button @onclick="@OnClickVoid">On-click Void Method</button></p>
        <p>@timeOfClickVoid</p>

        @*For regular tasks, you do not need async or await. But for asynchronous functions, you need to add async and await keywords*@
        <p><button @onclick="@(async () => await OnClickTask("On-click Task method "))">On-click Task or Async Method</button></p>
        <p>@timeOfClickTask</p>
        

        @*This method is extremely useful when you need to change one value or a single variable, like a boolean or an integer that changes states of app.If you need to use if statements or loops, it will get too messy. Better to use Task Method instead*@
        <p><button @onclick="@( () => { timeOfClickMultipleMethods = "Executed at " + DateTime.UtcNow.ToShortTimeString(); })">On-click Anonymous Method</button></p>
        <p>@timeOfClickMultipleMethods</p>

        <hr />

        <h4>Data-binding Examples</h4><br />
        <p>Input text, then click out of the textbox. Your text will appear below after you "lose focus" (clicking outside of the input field):</p>
        <p><input @bind="@dataBindingBasic" /></p>
        <p>@dataBindingBasic</p>
        <br />
        
        
      @*  <p>Input text, then click out of the textbox:</p>
        <p><input @bind="@dataBindingValue" @bind-value:event="oninput" /></p>
        <p>@dataBindingValue</p>
        <br />
*@
    </div>
</div>

@code {
    //Method Types
    string timeOfClickVoid = "";
    string timeOfClickTask = "";
    string timeOfClickMultipleMethods = "";

    //Data Binding
    string dataBindingBasic = "";
    string dataBindingValue = "";
    
    //Not as common
    void OnClickVoid()
    {
        timeOfClickVoid = "Executed at " + DateTime.UtcNow.ToShortTimeString();
    }

    Task OnClickTask(string methodName)
    {
        timeOfClickTask = "Executed " + methodName + "at " + DateTime.UtcNow.ToShortTimeString();

        //Needs to return a value
        return Task.CompletedTask;
    }




}
