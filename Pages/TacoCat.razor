@page "/tacocat"


<div class="container-fluid ">
    @*Title of Challenge*@
    <div class="row justify-content-center">
        <div class="col">
            <h1 class="text-center">Taco Cat Challenge:</h1>
            <hr />
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-xs col-sm col-md-10 col-lg-8">
            <h5 class="text-center">
                The purpose of this challenge is to check if a string is a palindrome or not.

            </h5>
            <h6>
                A palindrome is a word or phrase that reads the same forwards
                and backwards, ignoring blanks and considering uppercase and
                lowercase versions of the same letter to be equal. Some examples
                include "taco cat", "race car", or even "Mr Owl ate my metal worm".
            </h6>
        </div>
    </div>

    <hr />
    <div class="text-center ">

        <div class="row py-3">
            <div class="col-2"></div>
            <div class="col-8">
                <label class="col-form-label">Please enter your word or phrase below.</label>
                <input class="form-control" type="text" @bind="@userInput">
            </div>
            <div class="col-2"></div>
        </div>
        <div class="row py-3">
            <div class="col-5"></div>
            <div class="col-2">
                <button class="btn btn-primary" @onclick="CheckForPalindrome">Check for Palindrome!</button>
            </div>
            <div class="col-5"></div>
        </div>

    </div>



</div>

@code {

    //Check user's input to make sure it reads the same forwards as it does backwards, not counting spaces or special characters.

    private string userInput = "taco cat";

    void CheckForPalindrome()
    {
        //private string backwardsUserInput = userInput.ReversedUserInput

        if (userInput == null)
        {
            //Prompt user to input a word or phrase
        }
        else if (userInput == "s")
        {
            //User Input is equal to backwards input
        }
    }

    class UserInput
    {
        //maybe give class a method that reverses the user's string and stores it into a new variable
    }



}













